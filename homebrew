#!/bin/bash

DOWNLOADS="$HOME/Downloads"

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `osx` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# This function takes a .dmg filename, attaches it, installs the .mpkg file 
# within and detaches it
function install_from_dmg() {
    dmg_file=$1
    volume=`hdiutil attach -nobrowse -noautoopen "$dmg_file" 2> /dev/null | tail -1 | cut -f 3`
    install_package=`ls "$volume"/*.mpkg | head -1`
    sudo installer -pkg "$install_package" -target / > /dev/null 2>&1
    hdiutil detach "$volume" > /dev/null 2>&1
}

################################################################################
# Install homebrew's requirements
################################################################################

# XQuartz (X11)
if ! which xterm > /dev/null ; then
    echo "Installing XQuartz"
    XQUARTZ="http://xquartz.macosforge.org/downloads/SL/XQuartz-2.7.3.dmg"
    XQUARTZ_DMG="$DOWNLOADS/XQuartz-2.7.3.dmg"
    wget "--directory-prefix=$DOWNLOADS" "$XQUARTZ"
    install_from_dmg "$XQUARTZ_DMG"
fi

# XCode or XCode command line tools
if ! which gcc > /dev/null ; then
    echo "Installing Command line tools for XCode"
    XCODE_TOOLS="$DOWNLOADS/xcode44cltools_*.dmg"
    if ! ls $XCODE_TOOLS > /dev/null 2>&1 ; then
        open "https://developer.apple.com/downloads/index.action"
    fi
    while ! ls $XCODE_TOOLS > /dev/null 2>&1 ; do
        echo "Please download Command Line Tools for XCode and place in $DOWNLOADS, and press enter."
        read
    done
    XCODE_TOOLS_DMG=`ls $XCODE_TOOLS | head -1`
    install_from_dmg "$XCODE_TOOLS_DMG"
fi

# Install Java developer tools
if ! which javatool > /dev/null ; then
    echo "Installing Java"
    # Running this will prompt to install
    javac -version
    # Check every five seconds if the install has been completed
    while ! which javatool > /dev/null ; do
        sleep 5
    done
    # Give a little more time to complete, the above test isn't very comprehensive
    sleep 5
fi

################################################################################
# Install homebrew itself
################################################################################

if ! which brew > /dev/null ; then
    ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)
fi

# Make sure weâ€™re using the latest Homebrew
brew update

# Upgrade any already-installed formulae
brew upgrade

packages=`cat homebrew.formulae | sed 's/\s*#.*$//' | sed '/^\s*$/d'`
for package in $packages ; do
    # No quotes to allow arguments to be provided in the packaages list
    brew install $package
done

# Remove outdated versions from the cellar
brew cleanup

# Unpack the paths we want
# TODO: Keep any existing customisations?
#       We only want to ensure the order of the paths we mention 
#       (ie /usr/local/bin before /usr/bin)
sudo mv /etc/paths /etc/paths.dist
sudo cp paths /etc/paths
